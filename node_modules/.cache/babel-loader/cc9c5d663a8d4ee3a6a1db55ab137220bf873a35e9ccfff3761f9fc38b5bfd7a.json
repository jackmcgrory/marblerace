{"ast":null,"code":"var _jsxFileName = \"/Users/caitlinferrie/Desktop/marblerace/src/App.js\",\n  _s = $RefreshSig$();\nimport { useRive, useViewModelInstanceBoolean, useViewModelInstanceEnum, useViewModelInstanceNumber, useViewModelInstanceTrigger } from \"@rive-app/react-webgl2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const {\n    rive,\n    RiveComponent\n  } = useRive({\n    src: \"/shufflingboxes.riv\",\n    artboard: \"TV - 1\",\n    stateMachines: \"State Machine 1\",\n    autoBind: true // Auto-binding enabled\n  });\n  const viewModelInstance = rive === null || rive === void 0 ? void 0 : rive.viewModelInstance;\n\n  // Bind properties\n  const {\n    value: readyToOpen\n  } = useViewModelInstanceBoolean(\"readyToOpen\", viewModelInstance);\n  const {\n    value: winningBox\n  } = useViewModelInstanceNumber(\"winningBox\", viewModelInstance);\n  const {\n    value: shuffleNumber\n  } = useViewModelInstanceNumber(\"shuffleNumber\", viewModelInstance);\n  const {\n    value: winner\n  } = useViewModelInstanceBoolean(\"winner\", viewModelInstance);\n  const {\n    trigger: shuffleBoxes\n  } = useViewModelInstanceTrigger(\"shuffleBoxes\", viewModelInstance);\n  const {\n    value: currentSetUpEnum\n  } = useViewModelInstanceEnum(\"\", viewModelInstance);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Game State\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RiveComponent, {\n      style: {\n        width: \"600px\",\n        height: \"600px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Ready to Open: \", readyToOpen ? \"Yes\" : \"No\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Winning Box: \", winningBox]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Shuffle Number: \", shuffleNumber]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Winner: \", winner ? \"Yes\" : \"No\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Game Set Up Enum: \", currentSetUpEnum]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleBoxes(),\n      children: \"External Shuffle Button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cdXLyPHBVmJf0DZGRf/LFBmAKZA=\", false, function () {\n  return [useRive, useViewModelInstanceBoolean, useViewModelInstanceNumber, useViewModelInstanceNumber, useViewModelInstanceBoolean, useViewModelInstanceTrigger, useViewModelInstanceEnum];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useRive","useViewModelInstanceBoolean","useViewModelInstanceEnum","useViewModelInstanceNumber","useViewModelInstanceTrigger","jsxDEV","_jsxDEV","App","_s","rive","RiveComponent","src","artboard","stateMachines","autoBind","viewModelInstance","value","readyToOpen","winningBox","shuffleNumber","winner","trigger","shuffleBoxes","currentSetUpEnum","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","height","onClick","_c","$RefreshReg$"],"sources":["/Users/caitlinferrie/Desktop/marblerace/src/App.js"],"sourcesContent":["import { useRive, useViewModelInstanceBoolean, useViewModelInstanceEnum, useViewModelInstanceNumber, useViewModelInstanceTrigger } from \"@rive-app/react-webgl2\";\n\nexport default function App() {\n  const { rive, RiveComponent } = useRive({\n    src: \"/shufflingboxes.riv\",\n    artboard: \"TV - 1\",\n    stateMachines: \"State Machine 1\",\n    autoBind: true, // Auto-binding enabled\n  });\n\n  const viewModelInstance = rive?.viewModelInstance;\n\n  // Bind properties\n  const { value: readyToOpen } = useViewModelInstanceBoolean(\"readyToOpen\", viewModelInstance);\n  const { value: winningBox } = useViewModelInstanceNumber(\"winningBox\", viewModelInstance);\n  const { value: shuffleNumber } = useViewModelInstanceNumber(\"shuffleNumber\", viewModelInstance);\n  const { value: winner } = useViewModelInstanceBoolean(\"winner\", viewModelInstance);\n  const { trigger: shuffleBoxes} = useViewModelInstanceTrigger(\"shuffleBoxes\", viewModelInstance);\n  const {value : currentSetUpEnum} = useViewModelInstanceEnum(\"\", viewModelInstance) \n\n  return (\n    <div className=\"App\">\n      <h1>Game State</h1>\n      <RiveComponent style={{ width: \"600px\", height: \"600px\" }} />\n      <p>Ready to Open: {readyToOpen ? \"Yes\" : \"No\"}</p>\n      <p>Winning Box: {winningBox}</p>\n      <p>Shuffle Number: {shuffleNumber}</p>\n      <p>Winner: {winner ? \"Yes\" : \"No\"}</p>\n      <p>Game Set Up Enum: {currentSetUpEnum}</p>\n      <button onClick={shuffleBoxes()}>External Shuffle Button</button>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,OAAO,EAAEC,2BAA2B,EAAEC,wBAAwB,EAAEC,0BAA0B,EAAEC,2BAA2B,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjK,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM;IAAEC,IAAI;IAAEC;EAAc,CAAC,GAAGV,OAAO,CAAC;IACtCW,GAAG,EAAE,qBAAqB;IAC1BC,QAAQ,EAAE,QAAQ;IAClBC,aAAa,EAAE,iBAAiB;IAChCC,QAAQ,EAAE,IAAI,CAAE;EAClB,CAAC,CAAC;EAEF,MAAMC,iBAAiB,GAAGN,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,iBAAiB;;EAEjD;EACA,MAAM;IAAEC,KAAK,EAAEC;EAAY,CAAC,GAAGhB,2BAA2B,CAAC,aAAa,EAAEc,iBAAiB,CAAC;EAC5F,MAAM;IAAEC,KAAK,EAAEE;EAAW,CAAC,GAAGf,0BAA0B,CAAC,YAAY,EAAEY,iBAAiB,CAAC;EACzF,MAAM;IAAEC,KAAK,EAAEG;EAAc,CAAC,GAAGhB,0BAA0B,CAAC,eAAe,EAAEY,iBAAiB,CAAC;EAC/F,MAAM;IAAEC,KAAK,EAAEI;EAAO,CAAC,GAAGnB,2BAA2B,CAAC,QAAQ,EAAEc,iBAAiB,CAAC;EAClF,MAAM;IAAEM,OAAO,EAAEC;EAAY,CAAC,GAAGlB,2BAA2B,CAAC,cAAc,EAAEW,iBAAiB,CAAC;EAC/F,MAAM;IAACC,KAAK,EAAGO;EAAgB,CAAC,GAAGrB,wBAAwB,CAAC,EAAE,EAAEa,iBAAiB,CAAC;EAElF,oBACET,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA;MAAAmB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBvB,OAAA,CAACI,aAAa;MAACoB,KAAK,EAAE;QAAEC,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAQ;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7DvB,OAAA;MAAAmB,QAAA,GAAG,iBAAe,EAACR,WAAW,GAAG,KAAK,GAAG,IAAI;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClDvB,OAAA;MAAAmB,QAAA,GAAG,eAAa,EAACP,UAAU;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCvB,OAAA;MAAAmB,QAAA,GAAG,kBAAgB,EAACN,aAAa;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCvB,OAAA;MAAAmB,QAAA,GAAG,UAAQ,EAACL,MAAM,GAAG,KAAK,GAAG,IAAI;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCvB,OAAA;MAAAmB,QAAA,GAAG,oBAAkB,EAACF,gBAAgB;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3CvB,OAAA;MAAQ2B,OAAO,EAAEX,YAAY,CAAC,CAAE;MAAAG,QAAA,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEV;AAACrB,EAAA,CA9BuBD,GAAG;EAAA,QACOP,OAAO,EAURC,2BAA2B,EAC5BE,0BAA0B,EACvBA,0BAA0B,EACjCF,2BAA2B,EACpBG,2BAA2B,EACzBF,wBAAwB;AAAA;AAAAgC,EAAA,GAhBrC3B,GAAG;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}